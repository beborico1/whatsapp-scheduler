version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: whatsapp_scheduler
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d whatsapp_scheduler"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://user:password@postgres/whatsapp_scheduler
      REDIS_URL: redis://redis:6379/0
      SECRET_KEY: Vms3xpDcNmJzvkmSteYTvlaicAImuhxwExhO/NTr9nc=
    env_file:
      - ./backend/.env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: sh -c "alembic upgrade head && uvicorn main:app --host 0.0.0.0 --port 8000 --reload"

  celery_worker:
    build: ./backend
    environment:
      DATABASE_URL: postgresql://user:password@postgres/whatsapp_scheduler
      REDIS_URL: redis://redis:6379/0
    env_file:
      - ./backend/.env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: celery -A app.celery_app worker --loglevel=info

  celery_beat:
    build: ./backend
    environment:
      DATABASE_URL: postgresql://user:password@postgres/whatsapp_scheduler
      REDIS_URL: redis://redis:6379/0
    env_file:
      - ./backend/.env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: celery -A app.celery_app beat --loglevel=info

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend

volumes:
  postgres_data: